// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;
using MonoTouch.UIKit;
using Cnt.API;
using Cnt.Web.API.Models;
using MonoTouch.Foundation;

namespace Cnet.iOS
{
	public partial class OSAssignmentViewController : UIViewController
	{
		List<Placement> completedPlacements;
		List<Placement> upcomingPlacements;

		public OSAssignmentViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			Client client = AuthenticationHelper.GetClient ();
			completedPlacements = new List<Placement>(client.PlacementService.GetPlacements ());
			upcomingPlacements = new List<Placement> (client.PlacementService.GetPlacements ());
			this.assignmentsTable.Source = new OSAssignmentTableSource (upcomingPlacements);
		}

		partial void completedSwitchPressed (UIButton sender)
		{
			this.assignmentsTable.Source = new OSAssignmentTableSource (completedPlacements);
		}

		partial void upcomingSwitchPressed (UIButton sender)
		{
			this.assignmentsTable.Source = new OSAssignmentTableSource (upcomingPlacements);
		}
	}

	public class OSAssignmentTableSource : UITableViewSource
	{

		private List<Placement> tableItems;
		static NSString OSAssignmentsTableViewCellId = new NSString ("AssignmentsCellIdentifier");


		public OSAssignmentTableSource(List<Placement> items) : base()
		{
			tableItems = items;
		}

		public override int RowsInSection (UITableView tableview, int section)
		{
			return tableItems.Count;
		}

		public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
		{
			OSAssignmentsTableViewCell cell = (OSAssignmentsTableViewCell)tableView.DequeueReusableCell (OSAssignmentsTableViewCellId, indexPath);
			cell.BelowProfilePicLabel.Text = "Upcoming";
			cell.BookmarkImage.Image = new UIImage ();
			cell.ChildrenLabel.Text = tableItems [indexPath.Row].Students.Count() + " children";
			cell.DateLabel.Text = tableItems [indexPath.Row].Start.ToString("ddd d MMM");
			cell.FamilyNameLabel.Text = tableItems [indexPath.Row].ClientName;
			cell.InfoImage.Image = new UIImage ();

			Address location = tableItems[indexPath.Row].Location;
			cell.LocationLabel.Text = location.City + ", " + location.State;

			cell.ProfileImage.Image = Utility.UIImageFromUrl(tableItems [indexPath.Row].ClientPhoto);

			//cell.PurpleInfoImage.Image = new UIImage ();
			//cell.PurpleInfoLabel.Text = tableItems [indexPath.Row].ClientName + " ago";

			Schedule nextSchedule = tableItems [indexPath.Row].Schedules.FirstOrDefault ();
			cell.TimeLabel.Text = nextSchedule != null ? nextSchedule.Time.ToFormattedString() : String.Empty;
			return cell;
		}
	}
}
