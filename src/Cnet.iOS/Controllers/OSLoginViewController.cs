// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Net;
using MonoTouch.UIKit;
using Cnt.API;
using Cnt.API.Exceptions;

namespace Cnet.iOS
{
	public partial class OSLoginViewController : UIViewController
	{
		#region Private Members
		private const string LoginSegueName = "LogIn";
		private bool isLoggedIn;
		#endregion

		public OSLoginViewController (IntPtr handle) : base (handle)
		{
		}

		#region Public Methods
		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			forgotPasswordButton.TouchUpInside += ShowForgotPassword;
			signUpButton.TouchUpInside += GoToSignUp;
		}

		public override bool ShouldPerformSegue (string segueIdentifier, MonoTouch.Foundation.NSObject sender)
		{
			if (segueIdentifier == LoginSegueName)
				return isLoggedIn;

			return base.ShouldPerformSegue (segueIdentifier, sender);
		}
		#endregion

		#region Event Delgates
		partial void loginButtonClick(UIButton sender)
		{
			try
			{
				string username = this.tbxUsername.Text;
				string password = this.tbxPassword.Text;
				AuthenticationHelper.Authenticate(username, password);
				isLoggedIn = true;
			}
			catch (CntResponseException ex) {
				isLoggedIn = false;
				ShowError(ex);
			}
		}

		private void ShowForgotPassword(object sender, EventArgs e)
		{
			var alert = new UIAlertView ("Forgot Password", "Please enter your email address and your password will be sent to you.", null, "Cancel", "Send") { 
				AlertViewStyle = UIAlertViewStyle.PlainTextInput
			};
			alert.ShouldEnableFirstOtherButton = a => !String.IsNullOrWhiteSpace (a.GetTextField (0).Text);
			alert.Clicked += SendPassword;
			alert.Show ();
		}

		private void SendPassword(object sender, UIButtonEventArgs e)
		{
			if (e.ButtonIndex == 1) {
				string email = ((UIAlertView)sender).GetTextField (0).Text;
				try {
					new Client (null, null).AuthenticateService.SendPasswordReminder (email);
					new UIAlertView ("Password Sent", "An email with your password has been sent to you.", null, "Ok", null).Show ();
				} catch (CntResponseException ex) { 
					ShowError (ex, "Unable to send password. Contact your CNT office for information.");
				}
			}
		}

		private void GoToSignUp(object sender, EventArgs e)
		{
			Utility.OpenUrl ("http://www.collegenanniesandtutors.com/join/state/all");
		}
		#endregion

		#region Private Methods
		private void ShowError(CntResponseException exception, string defaultMessage = null)
		{
			string userMessage = defaultMessage ?? "Unknown error. Contact your CNT office for information.";
			switch (exception.HttpStatusCode) {
			case HttpStatusCode.Unauthorized:
				userMessage = "Unable to log in. Either Username or Password is incorrect.";
				break;
			case HttpStatusCode.Forbidden:
				userMessage = "Unable to log in. Contact your CNT office for information.";
				break;
			}
			var view = new UIAlertView ("Error", userMessage, null, "Ok", "Details");
			view.Clicked += (object sender, UIButtonEventArgs e) => ShowErrorDetail (e, exception.Message);
			view.Show ();
		}

		private void ShowErrorDetail(UIButtonEventArgs e, string message)
		{
			if (e.ButtonIndex == 1) {
				new UIAlertView ("Error Details", message, null, "Ok", null).Show();
			}
		}
		#endregion
	}
}
