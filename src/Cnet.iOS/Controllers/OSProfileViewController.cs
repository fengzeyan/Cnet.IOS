// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;
using MonoTouch.UIKit;
using Cnt.API;
using Cnt.Web.API.Models;
using MonoTouch.Foundation;
using Cnt.API.Models;

namespace Cnet.iOS
{
	public partial class OSProfileViewController : UIViewController
	{
		#region Private Members
		private static NSString LogOutSegueName = new NSString ("LogOut");
		private User user;
		private Assignment nextAssignment;
		private List<Assignment> completedAssignments;
		private List<Assignment> upcomingAssignments;
		#endregion

		public OSProfileViewController (IntPtr handle) : base (handle)
		{
		}

		#region Pubic Methods
		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			LoadUser ();
			RenderUser ();
		}

		public override void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
		{
			base.PrepareForSegue (segue, sender);
			if (segue.Identifier == LogOutSegueName)
				AuthenticationHelper.LogOut ();
		}
		#endregion

		#region Private Methods
		private void LoadUser()
		{
			Client client = AuthenticationHelper.GetClient ();
			user = client.UserService.GetUser(AuthenticationHelper.UserData.UserId);

			DateRange currentPayPeriod = AuthenticationHelper.UserData.PayPeriod;
			completedAssignments = new List<Assignment> (client.PlacementService.GetCompletedAssignments (currentPayPeriod.Start.Value, currentPayPeriod.End.Value));
			upcomingAssignments = new List<Assignment> (client.PlacementService.GetUpcomingAssignments (DateTime.Today, DateTime.Today.AddDays(7)));

			// Next Assignment
			if (upcomingAssignments.Any(a => a.GetStatus() == AssignmentStatus.Confirmed))
				nextAssignment = upcomingAssignments.Where(a => a.GetStatus() == AssignmentStatus.Confirmed).OrderBy (a => a.Start).First ();
		}

		private void RenderUser()
		{
			nameLabel.Text = user.ToNameString ();
			addressLabel.Text = user.AddressCurrent.ToLocationString ("{2}, {3} {4}");
			phoneLabel.Text = String.IsNullOrWhiteSpace (user.MobilePhone) ? user.HomePhone : user.MobilePhone;

			assignmentsLabel.Text = upcomingAssignments.Where(a => a.GetStatus() == AssignmentStatus.New).Count() + " unconfirmed";
			timesheetsLabel.Text = completedAssignments.Where(a => a.GetStatus() == AssignmentStatus.TimesheetRequired).Count() + " due";
			if (nextAssignment != null)
				nextAssignmentLabel.Text = nextAssignment.ToTimeUntilString ();
			else
				nextAssignmentLabel.Hidden = true;

			profileTable.Source = new OSProfileTableSource (this);
		}
		#endregion

		private class OSProfileTableSource : UITableViewSource
		{
			private List<OSProfileCellData> tableData;
			private static NSString OSProfileTableViewCellId = new NSString ("ProfileCellIdentifier");
			private static NSString OSSignOutCellId = new NSString ("SignOutCellIdentifier");

			public OSProfileTableSource(OSProfileViewController parent) : base()
			{
				LoadRows(parent);
			}

			public override int RowsInSection (UITableView tableview, int section)
			{
				return tableData.Count;
			}

			public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
			{
				if (indexPath.Row == tableData.Count - 1)
				{
					UITableViewCell cell = tableView.DequeueReusableCell (OSSignOutCellId, indexPath);
					cell.AdjustFrame (0, 0, 0, 20);
					return cell;
				}
				else
				{
					OSProfileCell cell = (OSProfileCell)tableView.DequeueReusableCell (OSProfileTableViewCellId, indexPath);
					cell.ProfileLabel.Text = tableData [indexPath.Row].Label;
					if (tableData [indexPath.Row].Label == "Emergency Contact" && cell.ProfileLabel.Frame.X != 20)
						cell.ProfileLabel.AdjustFrame (-39, 0, 39, 0);
					cell.IconImage.Image = tableData [indexPath.Row].Icon;
					cell.PhoneIconImage.Image = tableData [indexPath.Row].PhoneIcon;
					return cell;
				}
			}

			public override float GetHeightForRow (UITableView tableView, NSIndexPath indexPath)
			{
				float cellHeight = 44.0f;

				if (indexPath.Row == tableData.Count - 1)
					cellHeight = 60.0f;

				return cellHeight;
			}

			private void LoadRows (OSProfileViewController controller)
			{
				tableData = new List<OSProfileCellData> ();
				if (!String.IsNullOrWhiteSpace (controller.user.Email))
					tableData.Add (new OSProfileCellData () { 
						Label = controller.user.Email,
						Icon = new UIImage ("icon-mail.png"),
						PhoneIcon = new UIImage ()
					});
				if (!String.IsNullOrWhiteSpace (controller.user.MobilePhone))
					tableData.Add (new OSProfileCellData () { 
						Label = controller.user.MobilePhone,
						Icon = new UIImage ("icon-phone.png"),
						PhoneIcon = new UIImage ("icon-mobile-nocircle.png")
					});
				if (!String.IsNullOrWhiteSpace (controller.user.HomePhone))
					tableData.Add (new OSProfileCellData () { 
						Label = controller.user.HomePhone,
						Icon = new UIImage ("icon-phone.png"),
						PhoneIcon = new UIImage ("icon-home.png")
					});
				if (!String.IsNullOrWhiteSpace (controller.user.AddressCurrent.Line1))
					tableData.Add (new OSProfileCellData () { 
						Label = controller.user.AddressCurrent.Line1,
						Icon = new UIImage ("icon-street.png"),
						PhoneIcon = new UIImage ()
					});
				if (!String.IsNullOrWhiteSpace (controller.user.AddressCurrent.ToLocationString ("{2}{3}{4}")))
					tableData.Add (new OSProfileCellData () { 
						Label = controller.user.AddressCurrent.ToLocationString ("{2}, {3} {4}"),
						Icon = new UIImage ("icon-city.png"),
						PhoneIcon = new UIImage ()
					});
				tableData.Add(new OSProfileCellData(){
					Label = "Emergency Contact"
				});
				tableData.Add (new OSProfileCellData () { 
					Label = String.IsNullOrWhiteSpace (controller.user.EmergencyContactName) ? "We need your help! Please provide emergency contact." : controller.user.EmergencyContactName,
					Icon = new UIImage ("icon-user.png"),
					PhoneIcon = new UIImage ()
				});
				if (!String.IsNullOrWhiteSpace (controller.user.EmergencyContactPhone))
					tableData.Add (new OSProfileCellData () { 
						Label = controller.user.EmergencyContactPhone,
						Icon = new UIImage ("icon-phone.png"),
						PhoneIcon = new UIImage ("icon-home.png")
					});
			}

			private class OSProfileCellData
			{
				public string Label { get; set; }
				public UIImage Icon { get; set; }
				public UIImage PhoneIcon { get; set; }
			}
		}
	}
}
